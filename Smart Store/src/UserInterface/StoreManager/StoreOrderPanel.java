/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.StoreManager;

import Business.Enterprise.Enterprise;
import Business.Item.OrderItem;
import Business.Order.Order;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Prasad
 */
public class StoreOrderPanel extends javax.swing.JPanel {

    /**
     * Creates new form StoreOrderPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;

    StoreOrderPanel(JPanel userProcessContainer, Enterprise enterprise) {
         initComponents();
         
         this.userProcessContainer = userProcessContainer;
         this.enterprise = enterprise;
         
         populateTable();
         
         
    }

    public void populateTable(){
        
        DefaultTableModel model = (DefaultTableModel) storeDetailedOrderTable.getModel();

        model.setRowCount(0);

        for (OrderItem oi : enterprise.getStoreOrder().getItemList())
        {
              
                Object row[] = new Object[3];
                row[0] = oi.getProduct().getName();
                row[1] = oi.getQuantity();
                row[2] = oi.getProduct().getSupplier();
               
                model.addRow(row);
             
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        storeDetailedOrderTable = new javax.swing.JTable();
        approveOrder = new javax.swing.JButton();
        backButton = new javax.swing.JButton();

        setBackground(java.awt.Color.white);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Store Order");

        storeDetailedOrderTable.setBackground(new java.awt.Color(204, 255, 153));
        storeDetailedOrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order Item", "Quantity Required", "Supplier"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(storeDetailedOrderTable);

        approveOrder.setText("Approve Order");
        approveOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveOrderActionPerformed(evt);
            }
        });

        backButton.setText("<< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 241, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(106, 106, 106))
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(backButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(approveOrder)
                .addGap(290, 290, 290))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(303, 303, 303))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveOrder)
                    .addComponent(backButton))
                .addContainerGap(37, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void approveOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveOrderActionPerformed
        // TODO add your handling code here:
        if(enterprise.getStoreOrder().getItemList().isEmpty()==false)
         {      
           if(enterprise.getStoreOrder().isStoreManagerApproval()==false)
            {   
               ArrayList<OrderItem> orderLi = enterprise.getStoreOrder().getItemList();   
               enterprise.getStoreOrder().setStoreManagerApproval(true);
                enterprise.getStoreOrder().setTimeStamp();
                enterprise.getStoreOrderDirectory().getOrderList().add(enterprise.getStoreOrder());
                enterprise.getStoreOrder().getItemList().removeAll(orderLi);
        
                 JOptionPane.showMessageDialog(null,"Order has been sent to City Manager Approval", "Message", JOptionPane.INFORMATION_MESSAGE);
                 populateTable();
                  backAction();
        
         }
           else
           {
           JOptionPane.showMessageDialog(null,"Order has already sent to store.", "Message", JOptionPane.INFORMATION_MESSAGE);  
           return;
           }
        }
        else
        {
           JOptionPane.showMessageDialog(null,"No order for approval.", "Message", JOptionPane.INFORMATION_MESSAGE);  
           return; 
        }   
            
    }//GEN-LAST:event_approveOrderActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed

     public void backAction(){
         userProcessContainer.remove(this);
        Component[] componentAr = userProcessContainer.getComponents();
        Component component = componentAr[componentAr.length - 1];
        StoreManagerWorkArea smwa = (StoreManagerWorkArea) component;
        smwa.populateMessageTable();
        
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveOrder;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable storeDetailedOrderTable;
    // End of variables declaration//GEN-END:variables
}
